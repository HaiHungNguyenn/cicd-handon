name: Deploy

on:
  push:
    branches:
      - production
      - development

jobs:
  build_and_publish:
    runs-on: ubuntu-latest  
    outputs: 
      tag: ${{ steps.set_tag.outputs.x }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep 'tag_name' | cut -d\" -f4)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Set Image Tag
        id: set_tag
        run: |
          # Set build date format
          BUILD_DATE=$(date +'%d-%m-%H-%M')

          # Determine the tag based on the branch
          if [ "${GITHUB_REF##*/}" == "production" ]; then
            IMAGE_TAG="production-${BUILD_DATE}"
          elif [ "${GITHUB_REF##*/}" == "development" ]; then
            IMAGE_TAG="development-${BUILD_DATE}"
          else
            echo "Unsupported branch: ${GITHUB_REF##*/}"
            exit 1
          fi
          echo "NEW IMAGE TAG IS RELEASE ${IMAGE_TAG}"
          echo "x=${IMAGE_TAG}" >> "$GITHUB_OUTPUT"

      - name: Build Docker image
        run: |
          docker-compose build
          docker images 
          docker tag ghcr.io/haihungnguyenn/cicd-handon/api:latest ghcr.io/haihungnguyenn/cicd-handon/api:${{ env.IMAGE_TAG }}
#
      - name: Push Docker image
        run: |
          docker push ghcr.io/haihungnguyenn/cicd-handon/api:${{ env.IMAGE_TAG }}

  pull_and_run:
    runs-on: ubuntu-latest
    needs: build_and_publish
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure SSH Key
        run: |
          mkdir -p $HOME/.ssh
          touch $HOME/.ssh/azure_vm_key
          echo "${{ secrets.AZURE_SSH_KEY }}" > $HOME/.ssh/azure_vm_key
          chmod 600 $HOME/.ssh/azure_vm_key

      - name: Deploy to Azure VM
        run: |
          ssh -i ~/.ssh/azure_vm_key \
              -o StrictHostKeyChecking=no \
              ${{ secrets.AZURE_VM_HOST }} \
              '
              echo "Login successfully" &&
              echo "THE IMAGE TAG IS ${{ needs.build_and_publish.outputs.tag }}"&&
              cd docker-compose-collection/handon-cicd && 
              sed -i "s|image: ghcr.io/haihungnguyenn/cicd-handon/api:.*|image: ghcr.io/haihungnguyenn/cicd-handon/api:${{ needs.build_and_publish.outputs.tag }}|g" docker-compose.yml  &&
              docker-compose down &&
              echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
              docker-compose pull &&
              docker-compose up -d
              '